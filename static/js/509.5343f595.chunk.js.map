{"version":3,"file":"static/js/509.5343f595.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.js","webpack://react-homework-template/./src/components/MovieReviews/Reviews.module.css?48b8","components/MovieReviews/Reviews.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actorImage\":\"Cast_actorImage__IECZO\",\"containerCast\":\"Cast_containerCast__wsU4T\"};","import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport styles from './Cast.module.css';\n\nconst Cast = ({ movieId }) => {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=a067f81bd7a94c3876fea33a53d4c87a`\n        );\n        setCast(response.data.cast);\n      } catch (error) {\n        console.error('Error fetching cast:', error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h1>Cast</h1>\n      <ul>\n        <div className={styles.containerCast}>\n          {cast.map(actor => (\n            <li key={actor.id} className={styles.containerCast}>\n              {actor.name}\n              {actor.profile_path && (\n                <img\n                  className={styles.actorImage}\n                  src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n                  alt={actor.name}\n                />\n              )}{' '}\n            </li>\n          ))}\n        </div>\n      </ul>\n    </div>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"posterImage\":\"MovieDetails_posterImage__VZLT9\",\"containerPoster\":\"MovieDetails_containerPoster__GTDW9\",\"containerMovieDetails\":\"MovieDetails_containerMovieDetails__2fnl3\",\"description\":\"MovieDetails_description__n2kBz\",\"containerInformation\":\"MovieDetails_containerInformation__3mvmd\",\"btnCast\":\"MovieDetails_btnCast__askkW\",\"btnReviews\":\"MovieDetails_btnReviews__8hGS-\",\"containerBtnsDetails\":\"MovieDetails_containerBtnsDetails__PSHo0\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../MovieReviews/Reviews';\nimport PropTypes from 'prop-types';\nimport styles from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [castVisible, setCastVisible] = useState(false);\n  const [reviewsVisible, setReviewsVisible] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=a067f81bd7a94c3876fea33a53d4c87a`\n        );\n        setMovieDetails(response.data);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  const toggleCastVisibility = () => {\n    setCastVisible(!castVisible);\n  };\n\n  const toggleReviewsVisibility = () => {\n    setReviewsVisible(!reviewsVisible);\n  };\n\n  if (!movieDetails) return <div>Loading...</div>;\n\n  return (\n    <div className={styles.containerMovieDetails}>\n      <h1>{movieDetails.title}</h1>\n      <div className={styles.containerPoster}>\n        {movieDetails.poster_path && (\n          <img\n            className={styles.posterImage}\n            src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n            alt={movieDetails.title}\n          />\n        )}{' '}\n        <p className={styles.description}>{movieDetails.overview}</p>\n      </div>\n      <div>\n        <div className={styles.containerInformation}>\n          <p>Additional information</p>\n          <div className={styles.containerBtnsDetails}>\n            <button onClick={toggleCastVisibility} className={styles.btnCast}>\n              Cast\n            </button>\n            {castVisible && <Cast movieId={movieId} />}\n            <button\n              onClick={toggleReviewsVisibility}\n              className={styles.btnReviews}\n            >\n              Reviews\n            </button>\n            {reviewsVisible && <Reviews movieId={movieId} />}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMovieDetails.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default MovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"containerReviews\":\"Reviews_containerReviews__ic9uA\"};","import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport styles from './Reviews.module.css';\n\nconst Reviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=a067f81bd7a94c3876fea33a53d4c87a`\n        );\n        setReviews(response.data.results);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div className={styles.containerReviews}>\n      <h1>Reviews</h1>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <p>{review.content}</p>\n            <p>Author: {review.author}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Reviews;\n"],"names":["_ref","movieId","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCast","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","data","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","className","styles","map","actor","name","profile_path","src","alt","id","useParams","movieDetails","setMovieDetails","_useState3","_useState4","castVisible","setCastVisible","_useState5","_useState6","reviewsVisible","setReviewsVisible","fetchMovieDetails","title","poster_path","overview","onClick","Cast","Reviews","reviews","setReviews","fetchReviews","results","review","content","author"],"sourceRoot":""}