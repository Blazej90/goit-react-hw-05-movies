{"version":3,"file":"static/js/269.749d5a25.chunk.js","mappings":"qPACA,GAAgB,gBAAkB,gCAAgC,UAAY,0BAA0B,iBAAmB,iCAAiC,WAAa,2BAA2B,YAAc,4BAA4B,WAAa,2BAA2B,UAAY,0BAA0B,YAAc,6B,SC0E1U,EArEe,SAAHA,GAAkC,IAA5BC,EAAKD,EAALC,MAAOC,EAAaF,EAAbE,cACvBC,GAAoCC,EAAAA,EAAAA,UAASH,GAAS,IAAGI,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAAoDL,EAAAA,EAAAA,UAClDF,GAAiB,IAClBQ,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAFME,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAI1CG,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMC,EAAAA,EAAAA,IAAU,mDAADC,OACqBhB,EAAU,8CAC7D,KAAD,EAFKW,EAAQC,EAAAK,KAGdZ,EAAsBM,EAASO,KAAKC,SAASP,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAE7CS,QAAQC,MAAM,0BAAyBV,EAAAQ,IAAS,yBAAAR,EAAAW,OAAA,GAAAb,EAAA,kBAEnD,kBATiB,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KAiBlB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,gBAAuBC,SAAA,EACrCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAAA,YAAmBC,SAAC,mBACnCC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,MAAOhC,EACPiC,SAAU,SAAAC,GAAC,OAAIjC,EAAciC,EAAEC,OAAOH,MAAM,EAC5CI,WAbiB,SAAAC,GACH,UAAdA,EAAMC,KACRhC,GAEJ,EAUMqB,UAAWC,EAAAA,eAEbE,EAAAA,EAAAA,KAAA,UAAQS,QAASjC,EAAcqB,UAAWC,EAAAA,UAAiBC,SAAC,YAG5DC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAAA,iBAAwBC,SACpCzB,EAAmBoC,KAAI,SAAAC,GAAK,OAC3BX,EAAAA,EAAAA,KAAA,MAAmBH,UAAWC,EAAAA,WAAkBC,UAC9CH,EAAAA,EAAAA,MAACgB,EAAAA,GAAI,CAACC,GAAE,WAAA3B,OAAayB,EAAMG,IAAMjB,UAAWC,EAAAA,WAAkBC,SAAA,CAC3DY,EAAMI,aACLf,EAAAA,EAAAA,KAAA,OACEH,UAAWC,EAAAA,YACXkB,IAAG,kCAAA9B,OAAoCyB,EAAMI,aAC7CE,IAAKN,EAAMO,SAGblB,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAAA,SAAgBC,SAAC,eAEpCC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAAA,YAAmBC,SAAEY,EAAMO,YAXvCP,EAAMG,GAaV,QAKf,C","sources":["webpack://react-homework-template/./src/components/MoviesSearch/Movies.module.css?6282","components/MoviesSearch/Movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"containerSearch\":\"Movies_containerSearch__mWT1D\",\"BtnSearch\":\"Movies_BtnSearch__Dgadn\",\"containerPosters\":\"Movies_containerPosters__zcZzP\",\"posterItem\":\"Movies_posterItem__IjeAh\",\"posterImage\":\"Movies_posterImage__MCEbM\",\"posterLink\":\"Movies_posterLink__-6GKJ\",\"btnSearch\":\"Movies_btnSearch__LxZaL\",\"labelSearch\":\"Movies_labelSearch__VxEG2\"};","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport styles from './Movies.module.css';\n\nconst Movies = ({ query, searchResults }) => {\n  const [localQuery, setLocalQuery] = useState(query || '');\n  const [localSearchResults, setLocalSearchResults] = useState(\n    searchResults || []\n  );\n\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?query=${localQuery}&api_key=a067f81bd7a94c3876fea33a53d4c87a`\n      );\n      setLocalSearchResults(response.data.results);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n    }\n  };\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  return (\n    <div className={styles.containerSearch}>\n      <h1 className={styles.searchTitle}>Search Movies</h1>\n      <input\n        type=\"text\"\n        value={localQuery}\n        onChange={e => setLocalQuery(e.target.value)}\n        onKeyPress={handleKeyPress}\n        className={styles.labelSearch}\n      />\n      <button onClick={handleSearch} className={styles.btnSearch}>\n        Search\n      </button>\n      <ul className={styles.containerPosters}>\n        {localSearchResults.map(movie => (\n          <li key={movie.id} className={styles.posterItem}>\n            <Link to={`/movies/${movie.id}`} className={styles.posterLink}>\n              {movie.poster_path ? (\n                <img\n                  className={styles.posterImage}\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                  alt={movie.title}\n                />\n              ) : (\n                <span className={styles.noPoster}>No poster</span>\n              )}\n              <span className={styles.posterTitle}>{movie.title}</span>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n  searchResults: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default Movies;\n"],"names":["_ref","query","searchResults","_useState","useState","_useState2","_slicedToArray","localQuery","setLocalQuery","_useState3","_useState4","localSearchResults","setLocalSearchResults","handleSearch","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","data","results","t0","console","error","stop","apply","arguments","_jsxs","className","styles","children","_jsx","type","value","onChange","e","target","onKeyPress","event","key","onClick","map","movie","Link","to","id","poster_path","src","alt","title"],"sourceRoot":""}